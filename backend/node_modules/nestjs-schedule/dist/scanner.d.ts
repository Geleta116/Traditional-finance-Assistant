import { OnModuleInit } from '@nestjs/common';
import { DiscoveryService, NestContainer } from '@nestjs/core';
import { InstanceWrapper } from '@nestjs/core/injector/instance-wrapper';
import { Module } from '@nestjs/core/injector/module';
export declare class Scanner implements OnModuleInit {
    private readonly discoveryService;
    private container;
    constructor(discoveryService: DiscoveryService);
    onModuleInit(): any;
    findInjectable<T>(metaType?: Function): T | undefined;
    findProviderByName<T>(name: string): T | undefined;
    findContainer(): NestContainer | undefined;
    findContextModule(constructor: Function): Module | undefined;
    findContextModuleName(constructor: Function): string;
    findInjectableInstance(context: string, metaTypeOrName: Function | string): InstanceWrapper | undefined;
    findProviderInstance(context: string, metaTypeOrName: Function | string): InstanceWrapper | undefined;
    findProviderByClassName(module: Module, className: string): boolean;
}
